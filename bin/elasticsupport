#!/usr/bin/env ruby
#
# Import a supportconfig into elasticsearch
#
# Index    (Database) Elasticsupport
# Type     (Table)    rpm
# Id
# Document (Row)      package name
# Field    (Column)   nevra

require 'rubygems'
$:.push(File.join(File.dirname(__FILE__), '..', 'lib'))
require 'elasticsupport'
require 'tmpdir'

ELASTIC_DEFAULT = "localhost:9200"

def usage(msg=nil)
  STDERR.puts "*** Err: #{msg}" if msg
  STDERR.puts "Usage:"
  STDERR.puts "elasticsupport [--elastic <host>:<port>] <dir>|<tarball> [<file> [<file> ...]]"
  STDERR.puts "\t<dir> => unpacked supportconfig tarball"
  STDERR.puts "\t<tarball> => (compressed) supportconfig tarball"
  STDERR.puts ""
  STDERR.puts "\t<file> => file to parse from supportconfig"
  STDERR.puts ""
  STDERR.puts "--elastic defaults to #{ELASTIC_DEFAULT}"
  exit 1
end

#
# parse_supportconfig from directory (unpacked) or file (unpack to /var/tmp)
#

def parse_supportconfig elastic, handle, files
#  puts "parse_supportconfig #{files.inspect}"
  default_files = [ "supportconfig.txt", "basic-environment.txt", "hardware.txt" ]#, "rpm.txt" ]
  if files.nil? || files.empty?
    files = default_files
  end
#  puts "Supportconfig: #{handle}"
  elasticsupport = Elasticsupport::Elasticsupport.new handle, elastic
#  elasticsupport.index files
  files -= default_files
  elasticsupport.consume files
end

def unpack_and_parse_tarball elastic, file, files
  # assume tarball
#  puts "Assume #{file} is a tarball"
  current = Dir.getwd
  fullpath = File.expand_path(File.join(current, file))
  begin
    # extract tarball to temp dir
    Dir.mktmpdir do |tmpdir|
      STDERR.puts "Unpacking #{fullpath} to #{tmpdir}"
      system("tar -C #{tmpdir} -xf #{fullpath}")
      Dir.foreach(tmpdir) do |item|
        # find extracted dir
        next if item == '.' or item == '..'
        unpacked = File.join(tmpdir, item)
#        STDERR.puts "Unpacked #{unpacked}:"
        system("ls #{unpacked}")
        # look for spacewalk-debug.tar.bz2 and unpack it too
        spacewalk_debug = File.join(unpacked, "spacewalk-debug")
        begin
          system("tar -C #{unpacked} -xf #{spacewalk_debug}.tar.bz2")
        rescue
          STDERR.puts "#{spacewalk_debug} not found"
        end
      end
#  parse_supportconfig elastic, uncompressed, files
    end
  rescue
    STDERR.puts "#{file} is not a tarball"
    raise
  end
end

def parse_argument elastic, arg, files
#  puts "parse_argument #{files.inspect}"
  # try <dir>/supportconfig.txt
  if File.directory?(arg)
    dir = File.expand_path(arg)
    if File.readable?(File.join(dir, "supportconfig.txt"))
      # assume unpackaged supportconfig
      parse_supportconfig elastic, dir, files
    else
      # look inside dir
      Dir.open(dir).each do |f|
        next if f[0,1] == "."
        parse_argument File.join(dir, f), files
      end
    end
  elsif File.readable?(arg)
    unpack_and_parse_tarball elastic, arg, files
  else
    STDERR.puts "'#{arg}' is neither a directory nor a tarball"
  end
end

arg = ARGV.shift

elastic = ELASTIC_DEFAULT

if arg == "--elastic"
  elastic = ARGV.shift
  arg = ARGV.shift
end

usage "<arg> parameter missing" unless arg

STDERR.puts "Elasticsearch @ #{elastic}"
parse_argument elastic, arg, ARGV
